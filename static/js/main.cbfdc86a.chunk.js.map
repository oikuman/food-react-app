{"version":3,"sources":["components/Card/Card.module.css","components/Sinup/Signup.module.css","components/Menu/Menu.module.css","components/Card/Card.js","components/Menu/Menu.js","components/Sinup/Signup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","product","className","style","card","src","image","alt","name","cardImage","cardContent","cardName","cardPrice","price","cardDescr","description","cardButton","button","Menu","state","products","getProducts","a","axios","get","result","Error","this","then","setState","data","catch","error","console","log","menu","map","key","id","Component","Signup","user","sendUserData","post","headers","submitForm","e","username","target","querySelector","value","telephone","password","email","classes","form","onSubmit","TextField","textField","label","type","margin","variant","pattern","required","Button","App","to","activeClassName","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbfdc86a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3VSZp\",\"cardContent\":\"Card_cardContent__3uamf\",\"cardImage\":\"Card_cardImage__JYbB0\",\"cardName\":\"Card_cardName__1M4bm\",\"cardDescr\":\"Card_cardDescr__1Tztv\",\"cardPrice\":\"Card_cardPrice__1DoMF\",\"cardReviews\":\"Card_cardReviews__3Cn4p\",\"cardButton\":\"Card_cardButton__2114l\",\"tagList\":\"Card_tagList__1q_M1\",\"tagListItem\":\"Card_tagListItem__72GxK\",\"button\":\"Card_button__8jFrD\",\"buttonIcon\":\"Card_buttonIcon__8rLl2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Signup_form__3-W39\",\"button\":\"Signup_button__Ib8cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__2V0Eq\"};","import React from \"react\";\n\nimport style from \"./Card.module.css\";\n\nconst Card = ({ product }) => {\n  return (\n    <li>\n      <div className={style.card}>\n        <img\n          src={product.image}\n          alt={product.name}\n          className={style.cardImage}\n        />\n        <div className={style.cardContent}>\n          <h2 className={style.cardName}>{product.name}</h2>\n          <p className={style.cardPrice}>\n            <i className=\"material-icons\">monetization_on</i>\n            {product.price} гривен\n          </p>\n          <p className={style.cardDescr}>{product.description}</p>\n        </div>\n\n        <button className={style.cardButton + \" \" + style.button}>\n          <i className=\"material-icons button__icon\">shopping_cart</i>В корзину\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport style from \"./Menu.module.css\";\nimport Card from \"../Card/Card\";\n\nclass Menu extends Component {\n  state = {\n    products: null\n  };\n\n  getProducts = async () => {\n    try {\n      const url = \"http://localhost:3005\";\n      const result = await axios.get(`${url}/products`);\n      return result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  componentDidMount() {\n    this.getProducts()\n      .then(result => {\n        this.setState({ products: result.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    const { products } = this.state;\n    return (\n      <ul className={style.menu}>\n        {products &&\n          products.map(product => <Card key={product.id} product={product} />)}\n      </ul>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport classes from \"./Signup.module.css\";\n\nclass Signup extends Component {\n  state = {\n    user: \"\"\n  };\n\n  sendUserData = async user => {\n    try {\n      const url = \"http://localhost:3005\";\n      let result = await axios.post(`${url}/signup`, user, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  submitForm = e => {\n    const user = {\n      username: e.target.querySelector(\"#name\").value,\n      telephone: e.target.querySelector(\"#tel\").value,\n      password: e.target.querySelector(\"#psw\").value,\n      email: e.target.querySelector(\"#email\").value\n    };\n    console.log(user);\n    this.sendUserData(user).then(result => console.log(result));\n  };\n\n  render() {\n    return (\n      <form className={classes.form} onSubmit={this.submitForm}>\n        <div>\n          <TextField\n            id=\"name\"\n            className={classes.textField}\n            label=\"Name\"\n            type=\"text\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"tel\"\n            className={classes.textField}\n            label=\"Telephone\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"psw\"\n            className={classes.textField}\n            label=\"Password\"\n            type=\"password\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"email\"\n            className={classes.textField}\n            label=\"Email\"\n            type=\"email\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            required\n          />\n        </div>\n        <div>\n          <Button variant=\"contained\" type=\"submit\" className={classes.button}>\n            Submit\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Menu from \"./Menu/Menu\";\nimport Signup from \"./Sinup/Signup\";\n\nfunction App() {\n  return (\n    <div>\n      <ul className=\"list\">\n        <NavLink to=\"/signup\" className=\"link\" activeClassName=\"selected\">\n          Signup\n        </NavLink>\n        <NavLink to=\"/products\" className=\"link\" activeClassName=\"selected\">\n          Products\n        </NavLink>\n      </ul>\n      <Switch>\n        <Route path=\"/products\" component={Menu} />\n        <Route path=\"/signup\" component={Signup} />\n        <Redirect to=\"/signup\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}